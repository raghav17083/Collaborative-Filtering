2 What TG/2 is and What it isnt TG/2 has been described originally in [Busemann, 1996; Busemann and Horacek, 1998] as a template-based generator. 
Most generation systems (such as FUF/SURGE (Elhadad, 1992), Penman (Mann, 1983), RealPro (Lavoie and Rainbow, 1997), TG/2 (Busemann, 1996), and YAG (Channarukul, 1999; McRoy et al. , 1999)) alleviate this problem by using defaulting, in which a grammar writer specifies a default for each syntactic constraint. 
Moreover the costs are small since TG/2 reuses previously generated substrings during backtracking, as described in [Busemann, 1996]. 
The production system TG/2 (Busemann, 1996) 30 proved to be sufficiently flexible to accomplish this task by its ability to generate preferred formulations first. 
Since its first implementation in 1995, the shallow NLG system TG/2 [Busemann, 1996] has been used as a component in several diverse applications involving NLG. 
