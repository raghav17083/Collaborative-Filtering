A88-1031:1	68:178	In order to elucidate morphosyntax, some approaches use a simple (e.g. , two-level, or similar) model to account for orthographic behavior, and a "grammar of words" to analyze morpheme sequences syntactically (e.g. , \[Bear, 1986\], \[Russell et al. , 1986\]).
---------------------------------------------------
P93-1019:2	105:147	Therefore some allomorphic rules 97r* denotes the Kleene closure over alphabet 11" and A the complement of A with respect to ~r. 144 are restricted in nonphonological ways, applying only to certain word classes, so that some stems admit idiosyncratic exceptions with respect to the applicability of rules (see Bear 1988, Emele 1988, Trost 1991) To overcome the first difficulty, a number of researchers have suggested augmenting FA with "word grammars", expressed in terms of feature formalisms like PATR II (Bear 1986) or HPSG (Trost 1990).
---------------------------------------------------
J87-3008:3	79:447	In earlier versions of this formalism, the linguist had to specify the spelling rules in a low-level notation similar to that for finite state automata, but Koskenniemi (1985) outlined a more perspicuous high level notation, and we have adopted a variant of that, with a compilation technique inspired by the work of Bear(1986).
---------------------------------------------------
W98-1312:4	59:109	Feature-unification notation, as in D-PATR, has been proposed and even implemented in a number of morphology systems for constraining morphotactic dependencies (Karttunen, 1984; Karttunen, 1986; Bear, 1986; Kataja and Kbskenniemi, 1988; Beesley et al. , 1989; Trost, 1990).
---------------------------------------------------
W98-1008:5	118:125	Finally, this approach does not restrict the grammar writer to the framework of linear phonology, and allows for the testing of a certain type of morphological theories, which claim that bound morphemes do not exist as lexicon l~There are a number of exceptions, Bear (1986), Ritchie et al.
---------------------------------------------------
E91-1023:6	107:209	These include two-level morphology with continuation lexica and two-level rules (Koskenniemi 1983), its derivates with feature-based lexicon and two-level rules (Karttunen 1987, Bear 1986, Trost 1990), and Cahill's DATR-driven morphology with phonological descriptions in MOLUSC (1990).
---------------------------------------------------
P96-1022:7	143:203	4.3 Morphosyntactic Issues Finite-state models of two-level morphology implement morphotactics in two ways: using 'continuation patterns/classes' (Koskenniemi, 1983; Antworth, 1990; Karttunen, 1993) or unificationbased grammars (Bear, 1986; Ritchie et al. , 1992).
---------------------------------------------------
J94-1003:8	14:632	3 Although further development and application of this model is set to continue for some time, there is now a clear need to integrate it more closely with computational * University of Edinburgh, Centre for Cognitive Science, 2 Buccleuch Place, Edinburgh EH8 9LW, Scotland, U.K. E-mail: {steven,marke}@cogsci.ed.ac.uk 1 (Antworth 1990; Ritchie, Russell, Black, and Pulman 1992; Sproat 1992) 2 (Bear 1986; Antworth 1990; Schiller and Steffens 1991; Pulman and Hepple 1993) 3 Two caveats are necessary here.
---------------------------------------------------
E87-1004:9	23:161	This latter approach has been further developed by Bear (Bear, 1986).
---------------------------------------------------
E87-1004:10	10:161	e.g. Black, 1986 and Bear, 1986) in order to improve compilation and runtime, debugging and rule-writing facilities.
---------------------------------------------------
E87-1004:11	26:161	Furthermore, by treating morpho-syntax in a unification grammar framework, Bear obtains an effect which is very important provided that morphological analysis and synthesis are normally regarded as elements or modules of systems which also do other kinds of language processing, e.g. syntactic parsing: He reaches a stage where the output of the morphological analyser is something which can easily be used by a parsee or some other program (Bear, 1986, p. 275).
---------------------------------------------------
C92-3125:12	20:95	Recently, Bear (1986) has interpreted such rules directly, using Prolog as an implementation language.
---------------------------------------------------
E87-1003:13	17:183	Latez implementations have included automatic compilation techniques (Bear 1986, Ritchie et aZ 1987), which take in a high-level specification of marface-t~-lexical relationships and produce a directly interpretable set of automata.
---------------------------------------------------
