In MEAT, linguistic knowledge is entirely represented using Typed Feature Structures (TFS) (Carpenter, 1992; Zajac, 1992), the most widely used representational formalism today.


Constraints expressed as relations in frameworks such as Zajac (1992) could instead be expressed in F-PATR as compiled functions, leading perhaps to improved runtime speeds.


2 Examples of this approach are Carpenter, Pollard, and Franz (1991), D6rre (1991), D6rre and Eisele (1991), Johnson (in press b), Kay (1979, 1985a, 1985b), Pollard and Sag (1987), Rounds and Manaster-Ramer (1987), Smolka (1988), and Zajac (1992).


As shown in the following function structure example for the sentence "The people that buy silver love it.", different functions can be filled by one and the same constituent: clause Senser: \[-~ nominal-group Deictic: det \[ Spelling: "the" \] Thing: noun \[ Spelling: "people" \] Qualifier: dependent-clause \[Spelling: \] "that buy silver" Process: /initeJ_ SpeUing: "love"\] Phenomenon: 2~\] nominal-group \[ SpeUing: "it" \] Subject: D Theme: \["i'\] Directcomplement: \[7\] Given the notational equivalence of HPSG and systemic grammar first mentioned by (Carpenter, 1992) and (Zajac, 1992), and further elaborated in (Henschel, 1995), one can characterize a systemic grammar as a large type hierarchy with multiple (conjunctive and disjunctive) and multi-dimensional inheritance with an open-world semantics.


As shown by Carpenter (1992) and Zajac (1992, in press), we can use constraint resolution to carry out type inference for feature terms.


