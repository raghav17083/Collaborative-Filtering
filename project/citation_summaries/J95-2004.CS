J96-1003:1	14:187	Error-tolerant recognition can be used in many applications that are based on finite-state recognition, such as morphological analysis, spelling correction, or even tagging with finite-state models (Voutilainen and Tapanainen 1993; Roche and Schabes 1995).
---------------------------------------------------
C96-2105:2	7:158	Phonological rewrite-rules (Kaplan and Kay, 1994), two-level rules (Koskenniemi 1983), syntactic disarnbiguation rules (Kar\]sson et al 1994, Koskenniemi, Tapanainen, and Voutilainen 1992), and part-of-speech assignment rules (Brill 1992, Roche and Schabes 1995) are examples of replacement in context of finite-state grammars.
---------------------------------------------------
I08-2131:3	7:153	1 Introduction The problem of detecting and correcting misspelled words in text has received great attention due to its importance in several applications like text editing systems, optical character recognition systems, and morphological analysis and tagging (Roche and Schabes, 1995).
---------------------------------------------------
P09-1086:4	57:176	A typical challenge for TBL is the heavy computational requirements of the rule scoring function (Roche and Schabes, 1995; Ngai and Florian, 2001).
---------------------------------------------------
E99-1017:5	13:207	Backreferencing has been implicit in previous research, such as in the "batch rules" of Kaplan and Kay (1994), bracketing transducers for finite-state parsing (Karttunen, 1996), and the "LocalExtension" operation of Roche and Schabes (1995).
---------------------------------------------------
P97-1059:6	208:219	A.2L Roche, Emmanuel and Schabes, Yves (1995).
---------------------------------------------------
P97-1059:7	19:219	Among others, it can be composed with transducers that encode:  correction rules for the most frequent tagging errors which are automatically generated (Brill, 1992; Roche and Schabes, 1995) or manually written (Chanod and Tapanainen, 1995), in order to significantly improve tagging accuracy 2.
---------------------------------------------------
C00-1048:8	49:202	In other cases, as also descrit)ed in the work of Roche and Schabes (1995), a given structure fiTdls to undergo a rule as a consequence of s()me earlier rule ("bleeding").
---------------------------------------------------
C00-1048:9	169:202	Using the Brill-tagger, it also has to be taken into account that rules can be undone by a later rule (see also Roche and Schabes (1995)), as in tile word "feuilleteer" (Bug.: "leaf througlf').
---------------------------------------------------
P96-1015:10	77:220	(Roche and Schabes (1995) introduce a similar technique for imposing the left-to-right order on the transduction).
---------------------------------------------------
P96-1015:11	149:220	Although the same results could often be achieved by using lex and yacc, sed, awk, perl, and other Unix utilities, there is an advantage in using finitestate transducers for these tasks because they can then be smoothly integrated with other finite-state processes, such as morphological analysis by lexical transducers (Karttunen et al 1992, Karttunen 1994) and rule-based part-of-speech disambiguation (Chanod and Tapanainen 1995, Roche and Schabes 1995).
---------------------------------------------------
W00-1304:12	18:212	It has been applied to a wide variety of tasks, including part of speech tagging (Roche and Schabes, 1995; Brill, 1995), noun phrase chvnklng (Ramshaw and Marcus, 1999), parsing (Brill, 1996; Vilain and Day, 1996), spelling correction (Mangu and Brill, 1997), prepositional phrase attachment (Brill and Resnik, 1994), dialog act tagging (Samuel et al. , 1998), segmentation and message understanding (Day et al. , 1997), often achieving stateof-the-art performance with a small and easilyunderstandable list of rules.
---------------------------------------------------
P96-1034:13	246:253	A tree-based extension of the very fast algorithm described in (Roche and Schabes, 1995) is in principle possible for transformation-based parsing, but is likely to result in huge space requirements and seems impractical.
---------------------------------------------------
P96-1034:14	249:253	If space requirements are of primary importance or when the rule set is very large, our method can then be considered for stringbased transformation rewriting as an alternative to the already mentioned method in (Roche and Schabes, 1995), which is faster but has more onerous space requirements.
---------------------------------------------------
P96-1034:15	13:253	In (Roche and Schabes, 1995), a method is described for converting a list of transformations that operates on strings into a deterministic finite state transducer, resulting in an optimal tagger in the sense that tagging requires only one state transition per word, giving a linear time tagger whose run-time is independent of the number and size of rules.
---------------------------------------------------
P96-1034:16	63:253	The formulation we give here is inspired by (Kaptan and Kay, 1994) and (Roche and Schabes, 1995).
---------------------------------------------------
W95-0101:17	27:188	Transformation-based error-driven learning has been applied to a number of natural language problems, including part of speech tagging, prepositional phrase attachment disambiguation, speech generation and syntactic parsing \[Brill, 1992; Brill, 1994; Ramshaw and Marcus, 1994; Roche and Schabes, 1995; Brill and Resnik, 1994; Huang et al. , 1994; Brill, 1993a; Brill, 1993b\].
---------------------------------------------------
P97-1042:18	106:170	When interpreted as a transduction that maps an input to an output, they cannot always be turned into a deterministic form (see (Mohri, 1994; Roche and Schabes, 1995)).
---------------------------------------------------
J95-4004:19	337:404	Roche and Schabes (1995) show a method for converting a list of tagging transformations into a deterministic finite state transducer with one state transition taken per word of input; the result is a transformation-based tagger whose tagging speed is about ten times that of the fastest Markov-model tagger.
---------------------------------------------------
A00-1033:20	52:177	All rules are compiled into a single finite-state transducer according to the approach described in (Roche and Schabes, 1995).
---------------------------------------------------
W98-1205:21	15:205	Among others, it can be composed with transducers that encode:  correction rules for the most frequent tagging errors which are automatically generated (Brill, 1992; Roche and Schabes, 1995) or manually written (Chanod and Tapanainen, 1995), in order to significantly improve tagging accuracy -9 . These rules may include long-distance dependencies not handled by ttMM taggers, and can conveniently be expressed by the replace operator (Kaplan and Kay, 1994; Karttunen, 1995; Kempe and Karttunen, 1996).
---------------------------------------------------
