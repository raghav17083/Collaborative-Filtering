J90-4003:1	63:73	Formal complexity analysis has not been carried out, but my algorithm is simpler, at least conceptually, than the variable-word-order parsers of Johnson (1985), Kashket (1986), and Abramson and Dahl (1989).
---------------------------------------------------
E89-1001:2	154:212	Since TAGs factor recursion from dependencies, discontinuities are captured straightforwardly without special devices (as opposed to Johnson 1985 or Bunt et al. 1987).
---------------------------------------------------
P98-1109:3	91:160	Reape uses bitstring codes for a tabular parsing algorithm, different from the head-corner algorithm used here, and attributes the original idea to Johnson (1985).
---------------------------------------------------
W08-1001:4	31:184	The core algorithm for the parse engine is what Reape (1991) presents as a generalised permutationcomplete parser, which in turn is based on the preceding proposal of Johnson (1985).
---------------------------------------------------
W06-0402:5	12:178	Johnson (1985), Reape (1991) and others have suggested using bit vectors to index chart edges as an alternative to substring spans in the case of parsing over FWO languages, but that is really only half of the story.
---------------------------------------------------
P91-1015:6	6:246	In the analysis of the Australian free word-order language Guugu Yimidhirr, Mark Johnson uses a 'combine' predicate in a DCG-like grammar that corresponds to the union of words (Johnson, 1985).
---------------------------------------------------
C04-1025:7	36:176	Some of these approaches (Johnson, 1985; Reape, 1991) lack word order constraints altogether.
---------------------------------------------------
C04-1025:8	113:176	In the spirit of Johnson (1985) and Reape (1991), and following Ramsay (1999), we represent edge coverage with bitvectors, stored as integers.
---------------------------------------------------
J88-4001:9	44:368	Consider the following context-free fragment, adapted directly from Johnson (1985).
---------------------------------------------------
