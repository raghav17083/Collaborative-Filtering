The result of Carpenter (1991) emphasizes the importance of lexical rules. 
E-mail: aac@csli.stanford.edu (~) 1999 Association for Computational Linguistics Computational Linguistics Volume 25, Number 4 Firstly, Carpenter (1991) demonstrates that if lexical rules are able to perform arbitrary manipulations (deletion, addition, and permutation) of potentially unbounded lists, any recursively enumerable language can be generated, even if the nonderived lexicon and grammar only generate context-free languages. 
In view of the unrestricted generative power of conventional HPSG-style lexical rules (Carpenter 1991), naive generative application of recursive or cyclic rules can lead to nontermination during parsing. 
In any case, if these rules only apply to the output of the lexicon, this will avoid the increase in generative capacity identified by Carpenter (1991), resulting from the interaction of recursion, arbitrary list operations and unbounded lists, by keeping list-valued features bounded during lexical rule application, and only allowing unbounded additions to, or limited modification of, such features during syntactic processing. 
As Carpenter (1991) observes, some of the rules that have been proposed must be able to operate recursively. 
