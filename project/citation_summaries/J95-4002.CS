However, virtually all Tree Adjoining Grammars (TAG, see e.g., (Schabes et al. , 1988)) used in NLP applications can (almost) be seen as lexicalized Tree Insertion Grammars (TIG), which can be converted into strongly equivalent CFGs (Schabes and Waters, 1995). 
Surprisingly, it has been claimed by Schabes and Waters (1995) that this property is problematic for the mildly contextsensitive languages represented by tree-adjoining grammars (TAGs): the best practical parsing algorithms for TAGs have time complexity Cg(n 6) (Vijay-Shankar and Joshi \[1985\]; see Satta \[1994\] and Rajasekaran and Yooseph \[1995\] for lower theoretical upper bounds), whereas the only published algorithm with the correct-prefix property--that by Schabes and Joshi (1988)--has complexity O(n9). 
Tree Insertion Grammars (TIG) are a restricted form of TAG that was introduced (Schabes and Waters, 1995) to keep the same benefits as TAG (adjoining of unbounded material) without the computational complexity TIG parsing is O(n 3 ). 
4.3 Comparison of Coverage In contrast to the formalisms of Schabes and Waters (Schabes and Waters, 1993; Schabes and Waters, 1995), our restriction allows wrapping complement auxiliaries as in Figure 4 (Schabes and Waters, 1995). 
Attachment in LTAG-spinal is similar to sister adjunction (Chiang, 2000) in Tree Insertion Grammar (TIG) (Schabes and Waters, 1995). 
