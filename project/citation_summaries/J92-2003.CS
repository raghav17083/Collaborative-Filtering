In most previous accounts (see, for example, Bouma \[1992\], Carpenter \[1993\], Copestake \[1993\], and Russell et al. \[1993\]), default unification is an asymmetric operation that combines two ordinary (T)FSs, one of which is treated 492 Briscoe and Copestake Lexical Rules as default and one nondefault, to produce a normal TFS. 
\["N"\] = F(a) if vi = ~di\]c is defined for each i (1 < i < n), then = t~(c)(F(N),vl "vn) undefined otherwise if vi = \[di\]e is defined for each i (1 < i < n), then i(c')(d) where d = (F(N), vl  vn) undefined otherwise if vi = \[di\]e is defined for each i (1 < i < n), then = ~(d)(d) where c = (u, v) and d = (u, Vl-v,) undefined otherwise = i(d)(e) where c = (u, v) and d= (F(N), v) Figure 3: Denotation function for DATR Descriptors There have been a number of formal treatments of defaults in the setting of attribute-value formalisms (Carpenter, 1993; Bouma, 1992; Russell et al. , 1992; Young and Rounds, 1993). 
There are three main advantages to Young and Rounds' work compared with other approaches to default unification (Bouma, 1990; Bouma, 1992; Russel et al. , 1992) which justify choosing it as a starting point for this work. 
.\],t2), (\[c b\],t2)} n\[~::; / {(\[F:<\],t3)} We just show how to calculate the defeasible TFS D12 =ao, DefFS(Fi~~F2): D12 ) ~.s { IF <\] } / : ~/(\[ ~s \]~'~ E1 ~ ~1~/~-~F <l~/ "({\[ ~ S'\]\[~: S ~ \] }~'~ ~F<~ / = \[~ s.\]'\[ ~G s b\] 79 Computational Linguistics Volume 25, Number 1 G:: I Thus D12 ~ D1 N D2 in this case, even though \[, G :: ~ We have suggested that because TDFSs contain more information than the defaults that win, the notion of conflict is more complex than in Carpenter (1992, 1993) and Bouma (1992). 
1.2 Previous Definitions of Default Operations on Feature Structures There have been a number of previous definitions of default unification, including those given by: van den Berg and Pr6st (1991), Bouma (1990, 1992), Calder (1991), Carpenter (1993), Copestake (1992, 1993), Russell, Carroll, and Warwick-Armstrong (1991), and Russell et al. 
