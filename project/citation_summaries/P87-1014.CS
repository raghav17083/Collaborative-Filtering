J88-3006:1	340:512	We have extended and improved the performance of this program, and augmented the functional grammar it uses (Paris and Kwee 1985; McKeown and Paris 1987).
---------------------------------------------------
J88-3006:2	185:512	(This strategy is described in detail in Paris and McKeown (1987) and Paris (1987)).
---------------------------------------------------
J88-3006:3	378:512	(Details about the process trace can be found in Paris and McKeown (1987) and Paris (1984)).
---------------------------------------------------
J88-3006:4	279:512	More examples can be found in Paris (1987)).
---------------------------------------------------
J88-3006:5	419:512	initial description is generated, a mechanism allows the user to request the information that was omitted for brevity sake (see Paris 1987).
---------------------------------------------------
W90-0108:6	43:114	55 (general-clause :head (CHASFES/S-V-0_two-explicit -args (genereL1-np :head (rip-proper-name 'Fluffy") : accessories ( : number singular : gender masculine :person third : determiner-policy no-determiner) ) (general-np :head (np-common-noun "mouse") : accessories ( : number plural : gender neuter : person third : detei~miner-policy init iall y-inde f init e) : further-specifications ( ( : attachment-function restrictive-mod/fier : specification (predication-to-be *self* (adjective "little"))) )) ) :accessories (:tense-modal present :progressive :unmarked) ).Input to MUMSLE-86 for the clause: Fluffy is chasing little mice from: Meteer, McDonald, Anderson, Forster, Gay, Huettner, and Sibun (1987) (e / chase :actor (e / cat :name Fluffy) :actee (m / mouse :size-ascription (s / little) :lultiplicity-q multiple : singulaxit y-q nonsinbmlar) : tense present-progressive) Corresponding input to PENMAN Figure 1: Comparison of input requirements for MUMBLE-86 and PENMAN range, property-ascription) and the respective domain roles and concepts (e.g. , system, faulty, input, destination, sail, ship, inoperative).
---------------------------------------------------
P90-1020:7	11:297	We have implemented a functional unifier (EIhadad, 1988) covering all the features described in (Kay, 1979) and (McKeown & Paris, 1987).
---------------------------------------------------
P90-1020:8	8:297	In particular, one type of unification formalism, functional unification grammar (FUG) is widely used for text generation (Kay, 1979, McKeown, 1985, Appelt, 1985, Paris, 1987, McKeown & Elhadad, 1990) and is beginning to be used for parsing (Kay, 1985, Kasper, 1987).
---------------------------------------------------
